type: action
definition:
  name: manage_agents
  namespace: tools.wazuh
  title: Manage Wazuh Agents
  description: Perform various operations on Wazuh agents (list, get details, add, remove, etc.).
  display_group: Wazuh
  doc_url: https://documentation.wazuh.com/current/user-manual/api/reference.html#tag/Agents
  author: bouddha-fr
  expects:
    base_url:
      type: str
      description: Base URL of the Wazuh API
    operation:
      type: str
      description: Operation to perform (list, get, add, remove, restart)
      enum: [list, get, add, remove, restart]
    agent_id:
      type: str
      description: ID of the agent (required for get, remove, restart operations)
    agent_name:
      type: str
      description: Name of the agent (required for add operation)
    agent_ip:
      type: str
      description: IP address of the agent (required for add operation)
    verify_ssl:
      type: bool
      description: Whether to verify SSL certificates.
      default: true
    auth_token_exp_timeout:
      type: int
      description: Duration for the authentication token's validity (in seconds).
      default: 900
  steps:
    - ref: get_access_token
      action: tools.wazuh.get_access_token
      args:
        url: ${{ inputs.base_url }}
        verify_ssl: ${{ inputs.verify_ssl }}
        auth_token_exp_timeout: ${{ inputs.auth_token_exp_timeout }}
    - ref: list_agents
      if: ${{ inputs.operation == "list" }}
      action: core.http_request
      args:
        url: ${{ inputs.base_url }}/agents
        method: GET
        headers:
          Authorization: Bearer ${{ steps.get_access_token.result }}
        verify_ssl: ${{ inputs.verify_ssl }}
    - ref: get_agent
      if: ${{ inputs.operation == "get" }}
      action: core.http_request
      args:
        url: ${{ inputs.base_url }}/agents/${{ inputs.agent_id }}
        method: GET
        headers:
          Authorization: Bearer ${{ steps.get_access_token.result }}
        verify_ssl: ${{ inputs.verify_ssl }}
    - ref: add_agent
      if: ${{ inputs.operation == "add" }}
      action: core.http_request
      args:
        url: ${{ inputs.base_url }}/agents
        method: POST
        headers:
          Authorization: Bearer ${{ steps.get_access_token.result }}
          Content-Type: application/json
        payload:
          name: ${{ inputs.agent_name }}
          ip: ${{ inputs.agent_ip }}
        verify_ssl: ${{ inputs.verify_ssl }}
    - ref: remove_agent
      if: ${{ inputs.operation == "remove" }}
      action: core.http_request
      args:
        url: ${{ inputs.base_url }}/agents/${{ inputs.agent_id }}
        method: DELETE
        headers:
          Authorization: Bearer ${{ steps.get_access_token.result }}
        verify_ssl: ${{ inputs.verify_ssl }}
    - ref: restart_agent
      if: ${{ inputs.operation == "restart" }}
      action: core.http_request
      args:
        url: ${{ inputs.base_url }}/agents/${{ inputs.agent_id }}/restart
        method: PUT
        headers:
          Authorization: Bearer ${{ steps.get_access_token.result }}
        verify_ssl: ${{ inputs.verify_ssl }}
  returns: ${{ FN.if(inputs.operation == "list", steps.list_agents.result, FN.if(inputs.operation == "get", steps.get_agent.result, FN.if(inputs.operation == "add", steps.add_agent.result, FN.if(inputs.operation == "remove", steps.remove_agent.result, FN.if(inputs.operation == "restart", steps.restart_agent.result, null))))) }}
